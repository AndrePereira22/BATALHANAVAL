package ModeloCliente;

import AplicacaoCliente.appCliente;
import Jogo.Jogador;
import Visao.Tabuleiro;
import Audio.Trilha;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javazoom.jl.decoder.JavaLayerException;

/**
 *
 * @author Andre-Coude
 */
public class TelaCliente extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form TelaPrincipal
     */
    private Cliente cliente;
    private Jogador jogador;
    private Trilha trilha;

    // Variaveis auxiliares
    private String host;
    private int porta;
    private PrintStream saida;
    private String comandoSaida = "";
    private boolean status = false;
    private boolean som = true;

    private Tabuleiro tabuleiro;

    public TelaCliente() {
        initComponents();

        this.cliente = appCliente.getCliente();
        this.jogador = appCliente.getJogador();

        try {
            this.trilha = new Trilha(1);
        } catch (FileNotFoundException | JavaLayerException ex) {
            Logger.getLogger(TelaCliente.class.getName()).log(Level.SEVERE, null, ex);
        }

        tabuleiro = new Tabuleiro(getCliente(), getJogador());

        getCheckAudio().addItemListener((ItemEvent e) -> {
            if (getCheckAudio().isSelected()) {
                try {
                    getTrilha().play();
                } catch (FileNotFoundException | JavaLayerException ex) {
                    Logger.getLogger(TelaCliente.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                setSom(false);
                getTrilha().stop();
            }
        });
        getBtnEntrar().addActionListener(this);
        getBotaoDesconecta().addActionListener(this);
        getBuffer().setVisible(false);
        setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        painelPrincipal = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtServidor = new javax.swing.JTextField();
        txtPorta = new javax.swing.JTextField();
        txtLogin = new javax.swing.JTextField();
        txtSenha = new javax.swing.JTextField();
        checkAudio = new javax.swing.JCheckBox();
        btnEntrar = new javax.swing.JButton();
        botaoDesconecta = new javax.swing.JButton();
        buffer = new javax.swing.JLabel();
        radioCadastro = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Engravers MT", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("BATALHA NAVAL");

        painelPrincipal.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setText("SERVIDOR :");

        jLabel3.setText("PORTA :");

        jLabel4.setText("LOGIN :");

        jLabel5.setText("SENHA :");

        txtServidor.setText("localhost");

        txtPorta.setText("22222");
        txtPorta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPortaActionPerformed(evt);
            }
        });

        txtLogin.setText("andre");
        txtLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLoginActionPerformed(evt);
            }
        });

        txtSenha.setText("123");

        checkAudio.setSelected(true);
        checkAudio.setText("AUDIO / MUDO");
        checkAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAudioActionPerformed(evt);
            }
        });

        btnEntrar.setText("CONECTAR");
        btnEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrarActionPerformed(evt);
            }
        });

        botaoDesconecta.setText("DESCONECTA");

        buffer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/buffer1.gif"))); // NOI18N

        radioCadastro.setText(" CADASTRO");

        tabela.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "NOME", "CONEXAO"
            }
        ));
        jScrollPane1.setViewportView(tabela);

        javax.swing.GroupLayout painelPrincipalLayout = new javax.swing.GroupLayout(painelPrincipal);
        painelPrincipal.setLayout(painelPrincipalLayout);
        painelPrincipalLayout.setHorizontalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(checkAudio)
                    .addComponent(btnEntrar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(57, 57, 57)
                .addComponent(buffer)
                .addGap(83, 83, 83)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPorta)
                    .addComponent(txtServidor)
                    .addComponent(txtLogin)
                    .addComponent(txtSenha)
                    .addComponent(radioCadastro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botaoDesconecta, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                .addGap(42, 42, 42))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                .addContainerGap())
        );
        painelPrincipalLayout.setVerticalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkAudio)
                            .addComponent(radioCadastro))
                        .addGap(29, 29, 29)
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(23, 23, 23)
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botaoDesconecta)
                            .addComponent(btnEntrar)))
                    .addComponent(buffer, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/submarino.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(painelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(painelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtPortaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPortaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPortaActionPerformed

    private void txtLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLoginActionPerformed

    private void checkAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAudioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkAudioActionPerformed

    private void btnEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEntrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoDesconecta;
    private javax.swing.JButton btnEntrar;
    private javax.swing.JLabel buffer;
    private javax.swing.JCheckBox checkAudio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel painelPrincipal;
    private javax.swing.JRadioButton radioCadastro;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtPorta;
    private javax.swing.JTextField txtSenha;
    private javax.swing.JTextField txtServidor;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {

        if (e.getSource() == getBtnEntrar()) {

            if (getRadioCadastro().isSelected()) {
                try {
                    setHost(getTxtServidor().getText());
                    setPorta(Integer.parseInt(getTxtPorta().getText()));

                    // Adiciona Host de Porta na Classe de Comunicacao de Dados
                    getCliente().setPorta(getPorta());
                    getCliente().setHost(getHost());

                    // Chama metodo conecta da Classe de Comunicacao de Dados
                    if (getCliente().conecta()) {
                        getCliente().setStatus(true);
                        getCliente().getSaida().println(":" + getTxtLogin().getText());

                    }

                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "SERVIDOR INDISPONIVEL!");
                }
            } else {
                try {
                    setHost(getTxtServidor().getText());
                    setPorta(Integer.parseInt(getTxtPorta().getText()));

                    // Adiciona Host de Porta na Classe de Comunicacao de Dados
                    getCliente().setPorta(getPorta());
                    getCliente().setHost(getHost());

                    // Chama metodo conecta da Classe de Comunicacao de Dados))
                    if (getCliente().conecta()) {
                        getCliente().setStatus(true);
                        getCliente().getSaida().println("$" + getTxtLogin().getText());

                    } else {
                        JOptionPane.showMessageDialog(null, "SERVIDOR INDISPONIVEL!");
                    }

                } catch (IOException ex) {

                }
            }

        }
        if (e.getSource() == getBotaoDesconecta()) {
            try {
                getCliente().desconecta();
                getBotaoDesconecta().setEnabled(false);
                getBtnEntrar().setEnabled(true);
                setStatus(false);
                tabuleiro.setVisible(false);
                if (isSom()) {
                    getTrilha().stop();
                }
            } catch (IOException ex) {
                Logger.getLogger(TelaCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    /**
     * @return the cliente
     */
    public Cliente getCliente() {
        return cliente;
    }

    /**
     * @param cliente the cliente to set
     */
    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    /**
     * @return the jogador
     */
    public Jogador getJogador() {
        return jogador;
    }

    /**
     * @param jogador the jogador to set
     */
    public void setJogador(Jogador jogador) {
        this.jogador = jogador;
    }

    /**
     * @return the trilha
     */
    public Trilha getTrilha() {
        return trilha;
    }

    /**
     * @param trilha the trilha to set
     */
    public void setTrilha(Trilha trilha) {
        this.trilha = trilha;
    }

    /**
     * @return the host
     */
    public String getHost() {
        return host;
    }

    /**
     * @param host the host to set
     */
    public void setHost(String host) {
        this.host = host;
    }

    /**
     * @return the porta
     */
    public int getPorta() {
        return porta;
    }

    /**
     * @param porta the porta to set
     */
    public void setPorta(int porta) {
        this.porta = porta;
    }

    /**
     * @return the saida
     */
    public PrintStream getSaida() {
        return saida;
    }

    /**
     * @param saida the saida to set
     */
    public void setSaida(PrintStream saida) {
        this.saida = saida;
    }

    /**
     * @return the comandoSaida
     */
    public String getComandoSaida() {
        return comandoSaida;
    }

    /**
     * @param comandoSaida the comandoSaida to set
     */
    public void setComandoSaida(String comandoSaida) {
        this.comandoSaida = comandoSaida;
    }

    /**
     * @return the status
     */
    public boolean isStatus() {
        return status;
    }

    /**
     * @param status the status to set
     */
    public void setStatus(boolean status) {
        this.status = status;
    }

    /**
     * @return the som
     */
    public boolean isSom() {
        return som;
    }

    /**
     * @param som the som to set
     */
    public void setSom(boolean som) {
        this.som = som;
    }

    /**
     * @return the tabuleiro
     */
    public Tabuleiro getTabuleiro() {
        return tabuleiro;
    }

    /**
     * @param tabuleiro the tabuleiro to set
     */
    public void setTabuleiro(Tabuleiro tabuleiro) {
        this.tabuleiro = tabuleiro;
    }

    /**
     * @return the jLabel1
     */
    public javax.swing.JLabel getjLabel1() {
        return jLabel1;
    }

    /**
     * @param jLabel1 the jLabel1 to set
     */
    public void setjLabel1(javax.swing.JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    /**
     * @return the botaoDesconecta
     */
    public javax.swing.JButton getBotaoDesconecta() {
        return botaoDesconecta;
    }

    /**
     * @return the btnEntrar
     */
    public javax.swing.JButton getBtnEntrar() {
        return btnEntrar;
    }

    /**
     * @return the buffer
     */
    public javax.swing.JLabel getBuffer() {
        return buffer;
    }

    /**
     * @return the checkAudio
     */
    public javax.swing.JCheckBox getCheckAudio() {
        return checkAudio;
    }

    /**
     * @return the radioCadastro
     */
    public javax.swing.JRadioButton getRadioCadastro() {
        return radioCadastro;
    }

    /**
     * @return the txtLogin
     */
    public javax.swing.JTextField getTxtLogin() {
        return txtLogin;
    }

    /**
     * @return the txtPorta
     */
    public javax.swing.JTextField getTxtPorta() {
        return txtPorta;
    }

    /**
     * @return the txtSenha
     */
    public javax.swing.JTextField getTxtSenha() {
        return txtSenha;
    }

    /**
     * @return the txtServidor
     */
    public javax.swing.JTextField getTxtServidor() {
        return txtServidor;
    }

    /**
     * @return the painelPrincipal
     */
    public javax.swing.JPanel getPainelPrincipal() {
        return painelPrincipal;
    }

    /**
     * @return the tabela
     */
    public javax.swing.JTable getTabela() {
        return tabela;
    }

}
